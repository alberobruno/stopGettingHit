/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { inherits as _inherits, createSuper as _createSuper, classCallCheck as _classCallCheck, createClass as _createClass, defineProperty as _defineProperty, objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';
import PropTypes from 'prop-types';
import React__default from 'react';
import cx from 'classnames';
import { PrefixContext } from '../../internal/usePrefix.js';

var _defineProperty2, _defineProperty3;

var _excluded = ["id", "labelText", "className", "size"];

var ToggleSkeleton = /*#__PURE__*/function (_React$Component) {
  _inherits(ToggleSkeleton, _React$Component);

  var _super = _createSuper(ToggleSkeleton);

  function ToggleSkeleton() {
    _classCallCheck(this, ToggleSkeleton);

    return _super.apply(this, arguments);
  }

  _createClass(ToggleSkeleton, [{
    key: "render",
    value: function render() {
      var _this = this,
          _div;

      var _this$props = this.props,
          id = _this$props.id,
          labelText = _this$props.labelText,
          className = _this$props.className,
          size = _this$props.size,
          rest = _objectWithoutProperties(_this$props, _excluded);

      return /*#__PURE__*/React__default.createElement(PrefixContext.Consumer, null, function (prefix) {
        var toggleInputClassNames = cx("".concat(prefix, "--toggle ").concat(prefix, "--skeleton"), _defineProperty({}, "".concat(prefix, "--toggle-input--small"), size === 'sm'));
        return /*#__PURE__*/React__default.createElement("div", _extends({
          className: cx("".concat(prefix, "--form-item"), className)
        }, rest), /*#__PURE__*/React__default.createElement("input", {
          type: "checkbox",
          id: id,
          className: toggleInputClassNames
        }), /*#__PURE__*/React__default.createElement("label", {
          className: "".concat(prefix, "--toggle-input__label"),
          htmlFor: id,
          "aria-label": labelText ? null : _this.props['aria-label']
        }, labelText ? _div || (_div = /*#__PURE__*/React__default.createElement("div", null, labelText)) : null, /*#__PURE__*/React__default.createElement("span", {
          className: "".concat(prefix, "--toggle__switch")
        }, /*#__PURE__*/React__default.createElement("span", {
          className: "".concat(prefix, "--toggle__text--left")
        }), /*#__PURE__*/React__default.createElement("span", {
          className: "".concat(prefix, "--toggle__appearance")
        }), /*#__PURE__*/React__default.createElement("span", {
          className: "".concat(prefix, "--toggle__text--right")
        }))));
      });
    }
  }]);

  return ToggleSkeleton;
}(React__default.Component);

_defineProperty(ToggleSkeleton, "propTypes", (_defineProperty2 = {}, _defineProperty(_defineProperty2, 'aria-label', PropTypes.string.isRequired), _defineProperty(_defineProperty2, "className", PropTypes.string), _defineProperty(_defineProperty2, "id", PropTypes.string), _defineProperty(_defineProperty2, "labelText", PropTypes.string), _defineProperty(_defineProperty2, "size", PropTypes.oneOf(['sm', 'md'])), _defineProperty2));

_defineProperty(ToggleSkeleton, "defaultProps", (_defineProperty3 = {}, _defineProperty(_defineProperty3, 'aria-label', 'Toggle is loading'), _defineProperty(_defineProperty3, "size", 'md'), _defineProperty3));

export { ToggleSkeleton as default };
