/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { objectWithoutProperties as _objectWithoutProperties, defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';
import React__default from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';
import { usePrefix } from '../../internal/usePrefix.js';

var _excluded = ["children", "className", "stacked"];
var ButtonSet = /*#__PURE__*/React__default.forwardRef(function ButtonSet(_ref, ref) {
  var children = _ref.children,
      className = _ref.className,
      stacked = _ref.stacked,
      rest = _objectWithoutProperties(_ref, _excluded);

  var prefix = usePrefix();
  var buttonSetClasses = cx(className, "".concat(prefix, "--btn-set"), _defineProperty({}, "".concat(prefix, "--btn-set--stacked"), stacked));
  return /*#__PURE__*/React__default.createElement("div", _extends({}, rest, {
    className: buttonSetClasses,
    ref: ref
  }), children);
});
ButtonSet.displayName = 'ButtonSet';
ButtonSet.propTypes = {
  /**
   * Specify the content of your ButtonSet
   */
  children: PropTypes.node,

  /**
   * Specify an optional className to be added to your ButtonSet
   */
  className: PropTypes.string,

  /**
   * Specify the button arrangement of the set (vertically stacked or
   * horizontal)
   */
  stacked: PropTypes.bool
};
var ButtonSet$1 = ButtonSet;

export { ButtonSet$1 as default };
