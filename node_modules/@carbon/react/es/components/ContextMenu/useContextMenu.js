/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { slicedToArray as _slicedToArray } from '../../_virtual/_rollupPluginBabelHelpers.js';
import { useState, useEffect } from 'react';

/**
 * @param {Element|Document|Window} [trigger=document] The element which should trigger the Menu on right-click
 * @returns {object} Props object to pass onto Menu component
 */

function useContextMenu() {
  var trigger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      open = _useState2[0],
      setOpen = _useState2[1];

  var _useState3 = useState([0, 0]),
      _useState4 = _slicedToArray(_useState3, 2),
      position = _useState4[0],
      setPosition = _useState4[1];

  function openContextMenu(e) {
    e.preventDefault();
    var x = e.x,
        y = e.y;
    setPosition([x, y]);
    setOpen(true);
  }

  function onClose() {
    setOpen(false);
  }

  useEffect(function () {
    if (trigger && trigger instanceof Element || trigger instanceof Document || trigger instanceof Window) {
      trigger.addEventListener('contextmenu', openContextMenu);
      return function () {
        trigger.removeEventListener('contextmenu', openContextMenu);
      };
    }
  }, [trigger]);
  return {
    open: open,
    x: position[0],
    y: position[1],
    onClose: onClose
  };
}

export { useContextMenu as default };
