/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { defineProperty as _defineProperty, extends as _extends, objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';
import React__default from 'react';
import cx from 'classnames';
import PropTypes from 'prop-types';
import { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';
import { usePrefix } from '../../internal/usePrefix.js';

var Switcher = /*#__PURE__*/React__default.forwardRef(function Switcher(props, ref) {
  var prefix = usePrefix();
  var ariaLabel = props['aria-label'],
      ariaLabelledBy = props['aria-labelledby'],
      customClassName = props.className,
      children = props.children;
  var accessibilityLabel = {
    'aria-label': ariaLabel,
    'aria-labelledby': ariaLabelledBy
  };
  var className = cx("".concat(prefix, "--switcher"), _defineProperty({}, customClassName, !!customClassName));
  return /*#__PURE__*/React__default.createElement("ul", _extends({
    ref: ref,
    className: className
  }, accessibilityLabel), children);
});
Switcher.displayName = 'Switcher';
Switcher.propTypes = _objectSpread2(_objectSpread2({}, AriaLabelPropType), {}, {
  /**
   * expects to receive <SwitcherItem />
   */
  children: PropTypes.node.isRequired,

  /**
   * Optionally provide a custom class to apply to the underlying `<ul>` node
   */
  className: PropTypes.string
});
var Switcher$1 = Switcher;

export { Switcher$1 as default };
