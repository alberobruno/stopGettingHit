/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { objectWithoutProperties as _objectWithoutProperties, extends as _extends, objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';
import cx from 'classnames';
import React__default from 'react';
import PropTypes from 'prop-types';
import Link, { LinkPropTypes } from './Link.js';
import { usePrefix } from '../../internal/usePrefix.js';

var _excluded = ["children", "className", "prefix", "href"];

var HeaderName = function HeaderName(_ref) {
  var children = _ref.children,
      customClassName = _ref.className,
      prefix = _ref.prefix,
      href = _ref.href,
      rest = _objectWithoutProperties(_ref, _excluded);

  var selectorPrefix = usePrefix();
  var className = cx("".concat(selectorPrefix, "--header__name"), customClassName);
  return /*#__PURE__*/React__default.createElement(Link, _extends({}, rest, {
    className: className,
    href: href
  }), prefix && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("span", {
    className: "".concat(selectorPrefix, "--header__name--prefix")
  }, prefix), "\xA0"), children);
};

HeaderName.propTypes = _objectSpread2(_objectSpread2({}, LinkPropTypes), {}, {
  /**
   * Pass in children that are either a string or can be read as a string by
   * screen readers
   */
  children: PropTypes.node.isRequired,

  /**
   * Optionally provide a custom class to apply to the underlying `<li>` node
   */
  className: PropTypes.string,

  /**
   * Provide an href for the name to link to
   */
  href: PropTypes.string,

  /**
   * Optionally specify a prefix to your header name. Useful for companies, for
   * example: IBM [Product Name] versus solely [Product Name]
   */
  prefix: PropTypes.string
});
HeaderName.defaultProps = {
  prefix: 'IBM'
};
var HeaderName$1 = HeaderName;

export { HeaderName$1 as default };
