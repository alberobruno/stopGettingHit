/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React__default from 'react';
import { CARBON_SIDENAV_ITEMS } from './_utils.js';
import { usePrefix } from '../../internal/usePrefix.js';

var SideNavItems = function SideNavItems(_ref) {
  var customClassName = _ref.className,
      children = _ref.children,
      isSideNavExpanded = _ref.isSideNavExpanded;
  var prefix = usePrefix();
  var className = cx(["".concat(prefix, "--side-nav__items")], customClassName);
  var childrenWithExpandedState = React__default.Children.map(children, function (child) {
    if ( /*#__PURE__*/React__default.isValidElement(child)) {
      var _child$type;

      // avoid spreading `isSideNavExpanded` to non-Carbon UI Shell children
      return /*#__PURE__*/React__default.cloneElement(child, _objectSpread2({}, CARBON_SIDENAV_ITEMS.includes((_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.displayName) ? {
        isSideNavExpanded: isSideNavExpanded
      } : {}));
    }
  });
  return /*#__PURE__*/React__default.createElement("ul", {
    className: className
  }, childrenWithExpandedState);
};

SideNavItems.propTypes = {
  /**
   * Provide a single icon as the child to `SideNavIcon` to render in the
   * container
   */
  children: PropTypes.node.isRequired,

  /**
   * Provide an optional class to be applied to the containing node
   */
  className: PropTypes.string,

  /**
   * Property to indicate if the side nav container is open (or not). Use to
   * keep local state and styling in step with the SideNav expansion state.
   */
  isSideNavExpanded: PropTypes.bool
};
var SideNavItems$1 = SideNavItems;

export { SideNavItems$1 as default };
