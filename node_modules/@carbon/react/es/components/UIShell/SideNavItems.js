/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import cx from 'classnames';
import PropTypes from 'prop-types';
import React__default from 'react';
import { CARBON_SIDENAV_ITEMS } from './_utils.js';
import { usePrefix } from '../../internal/usePrefix.js';

const SideNavItems = _ref => {
  let {
    className: customClassName,
    children,
    isSideNavExpanded
  } = _ref;
  const prefix = usePrefix();
  const className = cx([`${prefix}--side-nav__items`], customClassName);
  const childrenWithExpandedState = React__default.Children.map(children, child => {
    if ( /*#__PURE__*/React__default.isValidElement(child)) {
      // avoid spreading `isSideNavExpanded` to non-Carbon UI Shell children
      const childDisplayName = child.type?.displayName;
      return /*#__PURE__*/React__default.cloneElement(child, {
        ...(CARBON_SIDENAV_ITEMS.includes(childDisplayName) ? {
          isSideNavExpanded
        } : {})
      });
    }
  });
  return /*#__PURE__*/React__default.createElement("ul", {
    className: className
  }, childrenWithExpandedState);
};
SideNavItems.displayName = 'SideNavItems';
SideNavItems.propTypes = {
  /**
   * Provide a single icon as the child to `SideNavIcon` to render in the
   * container
   */
  children: PropTypes.node.isRequired,
  /**
   * Provide an optional class to be applied to the containing node
   */
  className: PropTypes.string,
  /**
   * Property to indicate if the side nav container is open (or not). Use to
   * keep local state and styling in step with the SideNav expansion state.
   */
  isSideNavExpanded: PropTypes.bool
};

export { SideNavItems as default };
