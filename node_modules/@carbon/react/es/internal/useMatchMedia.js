/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { slicedToArray as _slicedToArray } from '../_virtual/_rollupPluginBabelHelpers.js';
import { useState, useEffect } from 'react';
import { canUseDOM } from './environment.js';

function useMatchMedia(mediaQueryString) {
  var _useState = useState(function () {
    if (canUseDOM) {
      var mediaQueryList = window.matchMedia(mediaQueryString);
      return mediaQueryList.matches;
    }

    return false;
  }),
      _useState2 = _slicedToArray(_useState, 2),
      matches = _useState2[0],
      setMatches = _useState2[1];

  useEffect(function () {
    function listener(event) {
      setMatches(event.matches);
    }

    var mediaQueryList = window.matchMedia(mediaQueryString); // Support fallback to `addListener` for broader browser support

    if (mediaQueryList.addEventListener) {
      mediaQueryList.addEventListener('change', listener);
    } else {
      mediaQueryList.addListener(listener);
    } // Make sure the media query list is in sync with the matches state


    setMatches(mediaQueryList.matches);
    return function () {
      if (mediaQueryList.addEventListener) {
        mediaQueryList.removeEventListener('change', listener);
      } else {
        mediaQueryList.removeListener(listener);
      }
    };
  }, [mediaQueryString]);
  return matches;
}

export { useMatchMedia };
