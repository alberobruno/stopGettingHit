/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var PropTypes = require('prop-types');
var React = require('react');
var cx = require('classnames');
var usePrefix = require('../../internal/usePrefix.js');
var FeatureFlags = require('@carbon/feature-flags');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);
var FeatureFlags__namespace = /*#__PURE__*/_interopNamespace(FeatureFlags);

var _excluded = ["className", "children", "id"];

function FormLabel(_ref) {
  var customClassName = _ref.className,
      children = _ref.children,
      id = _ref.id,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, _excluded);

  var prefix = usePrefix.usePrefix();
  var className = cx__default["default"]("".concat(prefix, "--label"), _rollupPluginBabelHelpers.defineProperty({}, "".concat(prefix, "--label--no-margin"), FeatureFlags__namespace.enabled('enable-v11-release')), customClassName);
  return /*#__PURE__*/React__default["default"].createElement("label", _rollupPluginBabelHelpers["extends"]({
    htmlFor: id,
    className: className
  }, rest), children);
}

FormLabel.propTypes = {
  /**
   * Specify the content of the form label
   */
  children: PropTypes__default["default"].node,

  /**
   * Provide a custom className to be applied to the containing <label> node
   */
  className: PropTypes__default["default"].string,

  /**
   * Provide a unique id for the given <FormLabel>
   */
  id: PropTypes__default["default"].string
};

exports["default"] = FormLabel;
