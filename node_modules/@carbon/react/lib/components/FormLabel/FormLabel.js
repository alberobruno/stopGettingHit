/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var PropTypes = require('prop-types');
var React = require('react');
var cx = require('classnames');
var usePrefix = require('../../internal/usePrefix.js');
require('../Text/index.js');
var Text = require('../Text/Text.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);

function FormLabel(_ref) {
  let {
    className: customClassName,
    children,
    id,
    ...rest
  } = _ref;
  const prefix = usePrefix.usePrefix();
  const className = cx__default["default"](`${prefix}--label`, `${prefix}--label--no-margin`, customClassName);
  return /*#__PURE__*/React__default["default"].createElement(Text.Text, _rollupPluginBabelHelpers["extends"]({
    as: "label",
    htmlFor: id,
    className: className
  }, rest), children);
}
FormLabel.propTypes = {
  /**
   * Specify the content of the form label
   */
  children: PropTypes__default["default"].node,
  /**
   * Provide a custom className to be applied to the containing <label> node
   */
  className: PropTypes__default["default"].string,
  /**
   * Provide a unique id for the given <FormLabel>
   */
  id: PropTypes__default["default"].string
};

exports["default"] = FormLabel;
