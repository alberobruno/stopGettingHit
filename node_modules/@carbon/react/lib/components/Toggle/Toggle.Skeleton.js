/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var PropTypes = require('prop-types');
var React = require('react');
var cx = require('classnames');
var usePrefix = require('../../internal/usePrefix.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);

var _defineProperty2, _defineProperty3;

var _excluded = ["id", "labelText", "className", "size"];

var ToggleSkeleton = /*#__PURE__*/function (_React$Component) {
  _rollupPluginBabelHelpers.inherits(ToggleSkeleton, _React$Component);

  var _super = _rollupPluginBabelHelpers.createSuper(ToggleSkeleton);

  function ToggleSkeleton() {
    _rollupPluginBabelHelpers.classCallCheck(this, ToggleSkeleton);

    return _super.apply(this, arguments);
  }

  _rollupPluginBabelHelpers.createClass(ToggleSkeleton, [{
    key: "render",
    value: function render() {
      var _this = this,
          _div;

      var _this$props = this.props,
          id = _this$props.id,
          labelText = _this$props.labelText,
          className = _this$props.className,
          size = _this$props.size,
          rest = _rollupPluginBabelHelpers.objectWithoutProperties(_this$props, _excluded);

      return /*#__PURE__*/React__default["default"].createElement(usePrefix.PrefixContext.Consumer, null, function (prefix) {
        var toggleInputClassNames = cx__default["default"]("".concat(prefix, "--toggle ").concat(prefix, "--skeleton"), _rollupPluginBabelHelpers.defineProperty({}, "".concat(prefix, "--toggle-input--small"), size === 'sm'));
        return /*#__PURE__*/React__default["default"].createElement("div", _rollupPluginBabelHelpers["extends"]({
          className: cx__default["default"]("".concat(prefix, "--form-item"), className)
        }, rest), /*#__PURE__*/React__default["default"].createElement("input", {
          type: "checkbox",
          id: id,
          className: toggleInputClassNames
        }), /*#__PURE__*/React__default["default"].createElement("label", {
          className: "".concat(prefix, "--toggle-input__label"),
          htmlFor: id,
          "aria-label": labelText ? null : _this.props['aria-label']
        }, labelText ? _div || (_div = /*#__PURE__*/React__default["default"].createElement("div", null, labelText)) : null, /*#__PURE__*/React__default["default"].createElement("span", {
          className: "".concat(prefix, "--toggle__switch")
        }, /*#__PURE__*/React__default["default"].createElement("span", {
          className: "".concat(prefix, "--toggle__text--left")
        }), /*#__PURE__*/React__default["default"].createElement("span", {
          className: "".concat(prefix, "--toggle__appearance")
        }), /*#__PURE__*/React__default["default"].createElement("span", {
          className: "".concat(prefix, "--toggle__text--right")
        }))));
      });
    }
  }]);

  return ToggleSkeleton;
}(React__default["default"].Component);

_rollupPluginBabelHelpers.defineProperty(ToggleSkeleton, "propTypes", (_defineProperty2 = {}, _rollupPluginBabelHelpers.defineProperty(_defineProperty2, 'aria-label', PropTypes__default["default"].string.isRequired), _rollupPluginBabelHelpers.defineProperty(_defineProperty2, "className", PropTypes__default["default"].string), _rollupPluginBabelHelpers.defineProperty(_defineProperty2, "id", PropTypes__default["default"].string), _rollupPluginBabelHelpers.defineProperty(_defineProperty2, "labelText", PropTypes__default["default"].string), _rollupPluginBabelHelpers.defineProperty(_defineProperty2, "size", PropTypes__default["default"].oneOf(['sm', 'md'])), _defineProperty2));

_rollupPluginBabelHelpers.defineProperty(ToggleSkeleton, "defaultProps", (_defineProperty3 = {}, _rollupPluginBabelHelpers.defineProperty(_defineProperty3, 'aria-label', 'Toggle is loading'), _rollupPluginBabelHelpers.defineProperty(_defineProperty3, "size", 'md'), _defineProperty3));

exports["default"] = ToggleSkeleton;
