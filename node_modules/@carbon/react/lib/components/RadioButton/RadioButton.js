/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var cx = require('classnames');
var PropTypes = require('prop-types');
var React = require('react');
var warning = require('../../internal/warning.js');
var uniqueId = require('../../tools/uniqueId.js');
require('../Text/index.js');
var usePrefix = require('../../internal/usePrefix.js');
var Text = require('../Text/Text.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var _excluded = ["className", "labelText", "labelPosition", "innerRef", "hideLabel"];

var RadioButton = /*#__PURE__*/function (_React$Component) {
  _rollupPluginBabelHelpers.inherits(RadioButton, _React$Component);

  var _super = _rollupPluginBabelHelpers.createSuper(RadioButton);

  function RadioButton() {
    var _this;

    _rollupPluginBabelHelpers.classCallCheck(this, RadioButton);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _rollupPluginBabelHelpers.defineProperty(_rollupPluginBabelHelpers.assertThisInitialized(_this), "prefix", _this.context);

    _rollupPluginBabelHelpers.defineProperty(_rollupPluginBabelHelpers.assertThisInitialized(_this), "uid", _this.props.id || uniqueId["default"]());

    _rollupPluginBabelHelpers.defineProperty(_rollupPluginBabelHelpers.assertThisInitialized(_this), "handleChange", function (evt) {
      _this.props.onChange(_this.props.value, _this.props.name, evt);
    });

    return _this;
  }

  _rollupPluginBabelHelpers.createClass(RadioButton, [{
    key: "render",
    value: function render() {
      var prefix = this.prefix;

      var _this$props = this.props,
          className = _this$props.className,
          labelText = _this$props.labelText,
          labelPosition = _this$props.labelPosition,
          ref = _this$props.innerRef,
          hideLabel = _this$props.hideLabel,
          other = _rollupPluginBabelHelpers.objectWithoutProperties(_this$props, _excluded);

      if (process.env.NODE_ENV !== "production") {
        process.env.NODE_ENV !== "production" ? warning.warning(labelPosition !== 'top' && labelPosition !== 'bottom', '`top`/`bottom` values for `labelPosition` property in the `RadioButton` component is deprecated ' + 'and being removed in the next release of `carbon-components-react`.') : void 0;
      }

      var innerLabelClasses = cx__default["default"](_rollupPluginBabelHelpers.defineProperty({}, "".concat(prefix, "--visually-hidden"), hideLabel));
      var wrapperClasses = cx__default["default"](className, "".concat(prefix, "--radio-button-wrapper"), _rollupPluginBabelHelpers.defineProperty({}, "".concat(prefix, "--radio-button-wrapper--label-").concat(labelPosition), labelPosition !== 'right'));
      return /*#__PURE__*/React__default["default"].createElement("div", {
        className: wrapperClasses
      }, /*#__PURE__*/React__default["default"].createElement("input", _rollupPluginBabelHelpers["extends"]({}, other, {
        type: "radio",
        className: "".concat(prefix, "--radio-button"),
        onChange: this.handleChange,
        id: this.uid,
        ref: ref
      })), /*#__PURE__*/React__default["default"].createElement("label", {
        htmlFor: this.uid,
        className: "".concat(prefix, "--radio-button__label")
      }, /*#__PURE__*/React__default["default"].createElement("span", {
        className: "".concat(prefix, "--radio-button__appearance")
      }), labelText && /*#__PURE__*/React__default["default"].createElement(Text.Text, {
        className: innerLabelClasses
      }, labelText)));
    }
  }]);

  return RadioButton;
}(React__default["default"].Component);

_rollupPluginBabelHelpers.defineProperty(RadioButton, "propTypes", {
  /**
   * Specify whether the <RadioButton> is currently checked
   */
  checked: PropTypes__default["default"].bool,

  /**
   * Provide an optional className to be applied to the containing node
   */
  className: PropTypes__default["default"].string,

  /**
   * Specify whether the <RadioButton> should be checked by default
   */
  defaultChecked: PropTypes__default["default"].bool,

  /**
   * Specify whether the control is disabled
   */
  disabled: PropTypes__default["default"].bool,

  /**
   * Specify whether the label should be hidden, or not
   */
  hideLabel: PropTypes__default["default"].bool,

  /**
   * Provide a unique id for the underlying `<input>` node
   */
  id: PropTypes__default["default"].string,

  /**
   * Provide where label text should be placed
   * NOTE: `top`/`bottom` are deprecated
   */
  labelPosition: PropTypes__default["default"].oneOf(['top', 'right', 'bottom', 'left']),

  /**
   * Provide label text to be read by screen readers when interacting with the
   * control
   */
  labelText: PropTypes__default["default"].node.isRequired,

  /**
   * Provide a name for the underlying `<input>` node
   */
  name: PropTypes__default["default"].string,

  /**
   * Provide an optional `onChange` hook that is called each time the value of
   * the underlying `<input>` changes
   */
  onChange: PropTypes__default["default"].func,

  /**
   * Provide a handler that is invoked when a user clicks on the control
   */
  onClick: PropTypes__default["default"].func,

  /**
   * Specify the value of the <RadioButton>
   */
  value: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]).isRequired
});

_rollupPluginBabelHelpers.defineProperty(RadioButton, "contextType", usePrefix.PrefixContext);

_rollupPluginBabelHelpers.defineProperty(RadioButton, "defaultProps", {
  labelText: '',
  labelPosition: 'right',
  onChange: function onChange() {},
  value: ''
});
var RadioButtonClassic = (function () {
  var forwardRef = function forwardRef(props, ref) {
    return /*#__PURE__*/React__default["default"].createElement(RadioButton, _rollupPluginBabelHelpers["extends"]({}, props, {
      innerRef: ref
    }));
  };

  forwardRef.displayName = 'RadioButton';
  return /*#__PURE__*/React__default["default"].forwardRef(forwardRef);
})();

exports.RadioButton = RadioButton;
exports["default"] = RadioButtonClassic;
