/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var cx = require('classnames');
var PropTypes = require('prop-types');
var React = require('react');
var index = require('../OverflowMenu/index.js');
var iconsReact = require('@carbon/icons-react');
var usePrefix = require('../../internal/usePrefix.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var _excluded = ["className", "renderIcon", "iconDescription", "children"];

var TableToolbarMenu = function TableToolbarMenu(_ref) {
  var className = _ref.className,
      renderIcon = _ref.renderIcon,
      iconDescription = _ref.iconDescription,
      children = _ref.children,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, _excluded);

  var prefix = usePrefix.usePrefix();
  var toolbarActionClasses = cx__default["default"](className, "".concat(prefix, "--toolbar-action ").concat(prefix, "--overflow-menu"));
  return /*#__PURE__*/React__default["default"].createElement(index["default"], _rollupPluginBabelHelpers["extends"]({
    ariaLabel: iconDescription,
    renderIcon: renderIcon,
    className: toolbarActionClasses,
    title: iconDescription,
    iconDescription: iconDescription,
    flipped: true
  }, rest), children);
};

TableToolbarMenu.defaultProps = {
  renderIcon: iconsReact.Settings,
  iconDescription: 'Settings'
};
TableToolbarMenu.propTypes = {
  children: PropTypes__default["default"].node.isRequired,

  /**
   * Provide an optional class name for the toolbar menu
   */
  className: PropTypes__default["default"].string,

  /**
   * The description of the menu icon.
   */
  iconDescription: PropTypes__default["default"].string.isRequired,

  /**
   * Optional prop to allow overriding the default menu icon
   */
  renderIcon: PropTypes__default["default"].oneOfType([PropTypes__default["default"].func, PropTypes__default["default"].object])
};
var TableToolbarMenu$1 = TableToolbarMenu;

exports["default"] = TableToolbarMenu$1;
