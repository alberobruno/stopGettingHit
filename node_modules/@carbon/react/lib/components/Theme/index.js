/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var cx = require('classnames');
var PropTypes = require('prop-types');
var React = require('react');
var usePrefix = require('../../internal/usePrefix.js');
var LayerContext = require('../Layer/LayerContext.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var _excluded = ["as", "children", "className", "theme"];
var ThemeContext = /*#__PURE__*/React__default["default"].createContext({
  theme: 'white'
});
function GlobalTheme(_ref) {
  var children = _ref.children,
      theme = _ref.theme;
  var value = React.useMemo(function () {
    return {
      theme: theme
    };
  }, [theme]);
  return /*#__PURE__*/React__default["default"].createElement(ThemeContext.Provider, {
    value: value
  }, children);
}
GlobalTheme.propTypes = {
  /**
   * Provide child elements to be rendered inside of `GlobalTheme`, this is
   * typically the root of your app
   */
  children: PropTypes__default["default"].node,

  /**
   * Specify the global theme for your app
   */
  theme: PropTypes__default["default"].oneOf(['white', 'g10', 'g90', 'g100'])
};
/**
 * Specify the theme to be applied to a page, or a region in a page
 */

function Theme(_ref2) {
  var _cx;

  var _ref2$as = _ref2.as,
      BaseComponent = _ref2$as === void 0 ? 'div' : _ref2$as,
      children = _ref2.children,
      customClassName = _ref2.className,
      theme = _ref2.theme,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(_ref2, _excluded);

  var prefix = usePrefix.usePrefix();
  var className = cx__default["default"](customClassName, (_cx = {}, _rollupPluginBabelHelpers.defineProperty(_cx, "".concat(prefix, "--white"), theme === 'white'), _rollupPluginBabelHelpers.defineProperty(_cx, "".concat(prefix, "--g10"), theme === 'g10'), _rollupPluginBabelHelpers.defineProperty(_cx, "".concat(prefix, "--g90"), theme === 'g90'), _rollupPluginBabelHelpers.defineProperty(_cx, "".concat(prefix, "--g100"), theme === 'g100'), _rollupPluginBabelHelpers.defineProperty(_cx, "".concat(prefix, "--layer-one"), true), _cx));
  var value = React__default["default"].useMemo(function () {
    return {
      theme: theme
    };
  }, [theme]);
  return /*#__PURE__*/React__default["default"].createElement(ThemeContext.Provider, {
    value: value
  }, /*#__PURE__*/React__default["default"].createElement(LayerContext.LayerContext.Provider, {
    value: 1
  }, /*#__PURE__*/React__default["default"].createElement(BaseComponent, _rollupPluginBabelHelpers["extends"]({}, rest, {
    className: className
  }), children)));
}
Theme.propTypes = {
  /**
   * Specify a custom component or element to be rendered as the top-level
   * element in the component
   */
  as: PropTypes__default["default"].oneOfType([PropTypes__default["default"].func, PropTypes__default["default"].string, PropTypes__default["default"].elementType]),

  /**
   * Provide child elements to be rendered inside of `Theme`
   */
  children: PropTypes__default["default"].node,

  /**
   * Provide a custom class name to be used on the outermost element rendered by
   * the component
   */
  className: PropTypes__default["default"].string,

  /**
   * Specify the theme
   */
  theme: PropTypes__default["default"].oneOf(['white', 'g10', 'g90', 'g100'])
};
/**
 * Get access to the current theme
 */

function useTheme() {
  return React__default["default"].useContext(ThemeContext);
}

exports.GlobalTheme = GlobalTheme;
exports.Theme = Theme;
exports.ThemeContext = ThemeContext;
exports.useTheme = useTheme;
