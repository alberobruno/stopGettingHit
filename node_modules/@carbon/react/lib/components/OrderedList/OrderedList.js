/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var PropTypes = require('prop-types');
var React = require('react');
var cx = require('classnames');
var usePrefix = require('../../internal/usePrefix.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);

var _excluded = ["children", "className", "nested", "native", "isExpressive"];

var OrderedList = function OrderedList(_ref) {
  var _classnames;

  var children = _ref.children,
      className = _ref.className,
      nested = _ref.nested,
      native = _ref.native,
      isExpressive = _ref.isExpressive,
      other = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, _excluded);

  var prefix = usePrefix.usePrefix();
  var classNames = cx__default["default"]((_classnames = {}, _rollupPluginBabelHelpers.defineProperty(_classnames, "".concat(prefix, "--list--ordered"), !native), _rollupPluginBabelHelpers.defineProperty(_classnames, "".concat(prefix, "--list--ordered--native"), native), _rollupPluginBabelHelpers.defineProperty(_classnames, "".concat(prefix, "--list--nested"), nested), _rollupPluginBabelHelpers.defineProperty(_classnames, "".concat(prefix, "--list--expressive"), isExpressive), _classnames), className);
  return /*#__PURE__*/React__default["default"].createElement("ol", _rollupPluginBabelHelpers["extends"]({
    className: classNames
  }, other), children);
};

OrderedList.propTypes = {
  /**
   * Provide list items to be rendered in the ordered list
   */
  children: PropTypes__default["default"].node,

  /**
   * Provide an optional className to be applied to the containing <ol> node
   */
  className: PropTypes__default["default"].string,

  /**
   * Specify whether this ordered list expressive or not
   */
  isExpressive: PropTypes__default["default"].bool,

  /**
   * Specify whether this ordered list should use native list styles instead of custom counter
   */
  native: PropTypes__default["default"].bool,

  /**
   * Specify whether this ordered list is nested inside of another nested list
   */
  nested: PropTypes__default["default"].bool
};
OrderedList.defaultProps = {
  nested: false,
  native: false,
  isExpressive: false
};
var OrderedList$1 = OrderedList;

exports["default"] = OrderedList$1;
