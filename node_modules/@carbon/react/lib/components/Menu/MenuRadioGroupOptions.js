/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var PropTypes = require('prop-types');
var iconsReact = require('@carbon/icons-react');
var MenuOption = require('./MenuOption.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);

function MenuRadioGroupOptions(_ref) {
  var items = _ref.items,
      initialSelectedItem = _ref.initialSelectedItem,
      _ref$onChange = _ref.onChange,
      onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange;

  var _useState = React.useState(initialSelectedItem),
      _useState2 = _rollupPluginBabelHelpers.slicedToArray(_useState, 2),
      selected = _useState2[0],
      setSelected = _useState2[1];

  function handleClick(option) {
    setSelected(option);
    onChange(option);
  }

  var options = items.map(function (option, i) {
    var isSelected = selected === option;
    return /*#__PURE__*/React__default["default"].createElement(MenuOption["default"], {
      key: i,
      role: "menuitemradio",
      "aria-checked": isSelected,
      renderIcon: isSelected ? iconsReact.Checkmark : null,
      label: option,
      indented: true,
      onClick: function onClick() {
        handleClick(option);
      }
    });
  });
  return options;
}

MenuRadioGroupOptions.propTypes = {
  /**
   * Whether the option should be checked by default
   */
  initialSelectedItem: PropTypes__default["default"].string,

  /**
   * Array of the radio options
   */
  items: PropTypes__default["default"].arrayOf(PropTypes__default["default"].string).isRequired,

  /**
   * Callback function when selection the has been changed
   */
  onChange: PropTypes__default["default"].func
};

exports["default"] = MenuRadioGroupOptions;
