/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var cx = require('classnames');
var PropTypes = require('prop-types');
var React = require('react');
var usePrefix = require('../../internal/usePrefix.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var _excluded = ["className", "children", "tagName"];

var Content = function Content(_ref) {
  var customClassName = _ref.className,
      children = _ref.children,
      tagName = _ref.tagName,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, _excluded);

  var prefix = usePrefix.usePrefix();
  var className = cx__default["default"]("".concat(prefix, "--content"), customClassName);
  return /*#__PURE__*/React__default["default"].createElement(tagName, _rollupPluginBabelHelpers.objectSpread2(_rollupPluginBabelHelpers.objectSpread2({}, rest), {}, {
    className: className
  }), children);
};

Content.propTypes = {
  /**
   * Provide children nodes to be rendered in the content container
   */
  children: PropTypes__default["default"].node,

  /**
   * Optionally provide a custom class name that is applied to the container
   */
  className: PropTypes__default["default"].string,

  /**
   * Optionally specify the tag of the content node. Defaults to `main`
   */
  tagName: PropTypes__default["default"].string
};
Content.defaultProps = {
  tagName: 'main'
};
var Content$1 = Content;

exports["default"] = Content$1;
