/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../../_virtual/_rollupPluginBabelHelpers.js');
var PropTypes = require('prop-types');
var React = require('react');
var cx = require('classnames');
var iconsReact = require('@carbon/icons-react');
var usePrefix = require('../../../internal/usePrefix.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);

var _excluded = ["aria-label", "children", "id", "disabled", "className"];
var TimePickerSelect = /*#__PURE__*/React__default["default"].forwardRef(function TimePickerSelect(_ref, ref) {
  var _cx;

  var _ref$ariaLabel = _ref['aria-label'],
      ariaLabel = _ref$ariaLabel === void 0 ? 'open list of options' : _ref$ariaLabel,
      children = _ref.children,
      id = _ref.id,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      className = _ref.className,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, _excluded);

  var prefix = usePrefix.usePrefix();
  var selectClasses = cx__default["default"]((_cx = {}, _rollupPluginBabelHelpers.defineProperty(_cx, "".concat(prefix, "--select"), true), _rollupPluginBabelHelpers.defineProperty(_cx, "".concat(prefix, "--time-picker__select"), true), _rollupPluginBabelHelpers.defineProperty(_cx, className, className), _cx));
  return /*#__PURE__*/React__default["default"].createElement("div", {
    className: selectClasses
  }, /*#__PURE__*/React__default["default"].createElement("select", _rollupPluginBabelHelpers["extends"]({
    "aria-label": ariaLabel,
    className: "".concat(prefix, "--select-input"),
    disabled: disabled,
    id: id,
    ref: ref
  }, rest), children), /*#__PURE__*/React__default["default"].createElement(iconsReact.ChevronDown, {
    className: "".concat(prefix, "--select__arrow"),
    "aria-hidden": "true"
  }));
});
TimePickerSelect.propTypes = {
  /**
   * Provide the contents of your TimePickerSelect
   */
  children: PropTypes__default["default"].node,

  /**
   * Specify an optional className to be applied to the node containing the label and the select box
   */
  className: PropTypes__default["default"].string,

  /**
   * Optionally provide the default value of the `<select>`
   */
  defaultValue: PropTypes__default["default"].any,

  /**
   * Specify whether the control is disabled
   */
  disabled: PropTypes__default["default"].bool,

  /**
   * Specify a custom `id` for the `<select>`
   */
  id: PropTypes__default["default"].string.isRequired
};
var TimePickerSelectNext = TimePickerSelect;

exports["default"] = TimePickerSelectNext;
