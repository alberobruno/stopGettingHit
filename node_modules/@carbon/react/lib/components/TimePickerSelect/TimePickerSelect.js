/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var PropTypes = require('prop-types');
var React = require('react');
var cx = require('classnames');
var iconsReact = require('@carbon/icons-react');
var deprecate = require('../../prop-types/deprecate.js');
var usePrefix = require('../../internal/usePrefix.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);

var _defineProperty2;

var _excluded = ["aria-label", "children", "className", "disabled", "hideLabel", "id", "iconDescription", "labelText"];

var TimePickerSelect = /*#__PURE__*/function (_Component) {
  _rollupPluginBabelHelpers.inherits(TimePickerSelect, _Component);

  var _super = _rollupPluginBabelHelpers.createSuper(TimePickerSelect);

  function TimePickerSelect() {
    _rollupPluginBabelHelpers.classCallCheck(this, TimePickerSelect);

    return _super.apply(this, arguments);
  }

  _rollupPluginBabelHelpers.createClass(TimePickerSelect, [{
    key: "render",
    value: function render() {
      var _classNames;

      var prefix = this.context;

      var _this$props = this.props,
          _this$props$ariaLabe = _this$props['aria-label'],
          ariaLabel = _this$props$ariaLabe === void 0 ? 'open list of options' : _this$props$ariaLabe,
          children = _this$props.children,
          className = _this$props.className,
          disabled = _this$props.disabled,
          _this$props$hideLabel = _this$props.hideLabel,
          hideLabel = _this$props$hideLabel === void 0 ? true : _this$props$hideLabel,
          id = _this$props.id,
          iconDescription = _this$props.iconDescription,
          labelText = _this$props.labelText,
          rest = _rollupPluginBabelHelpers.objectWithoutProperties(_this$props, _excluded);

      var selectClasses = cx__default["default"]((_classNames = {}, _rollupPluginBabelHelpers.defineProperty(_classNames, "".concat(prefix, "--select"), true), _rollupPluginBabelHelpers.defineProperty(_classNames, "".concat(prefix, "--time-picker__select"), true), _rollupPluginBabelHelpers.defineProperty(_classNames, className, className), _classNames));
      var labelClasses = cx__default["default"]("".concat(prefix, "--label"), _rollupPluginBabelHelpers.defineProperty({}, "".concat(prefix, "--visually-hidden"), hideLabel));
      var label = labelText ? /*#__PURE__*/React__default["default"].createElement("label", {
        htmlFor: id,
        className: labelClasses
      }, labelText) : null;
      return /*#__PURE__*/React__default["default"].createElement("div", {
        className: selectClasses
      }, label, /*#__PURE__*/React__default["default"].createElement("select", _rollupPluginBabelHelpers["extends"]({
        className: "".concat(prefix, "--select-input"),
        disabled: disabled,
        id: id,
        "aria-label": ariaLabel
      }, rest), children), /*#__PURE__*/React__default["default"].createElement(iconsReact.ChevronDown, {
        className: "".concat(prefix, "--select__arrow"),
        "aria-label": ariaLabel ? ariaLabel : iconDescription
      }));
    }
  }]);

  return TimePickerSelect;
}(React.Component);

_rollupPluginBabelHelpers.defineProperty(TimePickerSelect, "contextType", usePrefix.PrefixContext);

_rollupPluginBabelHelpers.defineProperty(TimePickerSelect, "propTypes", (_defineProperty2 = {}, _rollupPluginBabelHelpers.defineProperty(_defineProperty2, 'aria-label', PropTypes__default["default"].string), _rollupPluginBabelHelpers.defineProperty(_defineProperty2, "children", PropTypes__default["default"].node), _rollupPluginBabelHelpers.defineProperty(_defineProperty2, "className", PropTypes__default["default"].string), _rollupPluginBabelHelpers.defineProperty(_defineProperty2, "defaultValue", PropTypes__default["default"].any), _rollupPluginBabelHelpers.defineProperty(_defineProperty2, "disabled", PropTypes__default["default"].bool), _rollupPluginBabelHelpers.defineProperty(_defineProperty2, "hideLabel", deprecate["default"](PropTypes__default["default"].bool, 'The `hideLabel` prop for `TimePickerSelect` is no longer needed and has ' + 'been deprecated. It will be removed in the next major release.')), _rollupPluginBabelHelpers.defineProperty(_defineProperty2, "iconDescription", deprecate["default"](PropTypes__default["default"].string, 'The `iconDescription` prop for `TimePickerSelect` is no longer needed and has ' + 'been deprecated. It will be removed in the next major release. Use `aria-label` instead.')), _rollupPluginBabelHelpers.defineProperty(_defineProperty2, "id", PropTypes__default["default"].string.isRequired), _rollupPluginBabelHelpers.defineProperty(_defineProperty2, "labelText", PropTypes__default["default"].node.isRequired), _defineProperty2));

_rollupPluginBabelHelpers.defineProperty(TimePickerSelect, "defaultProps", {
  disabled: false
});

exports["default"] = TimePickerSelect;
