/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var PropTypes = require('prop-types');
var React = require('react');
var cx = require('classnames');
var Link = require('../Link/Link.js');
var iconsReact = require('@carbon/icons-react');
var usePrefix = require('../../internal/usePrefix.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);

var _excluded = ["aria-current", "children", "className", "href", "isCurrentPage"];
var BreadcrumbItem = /*#__PURE__*/React__default["default"].forwardRef(function BreadcrumbItem(_ref, ref) {
  var _cx;

  var ariaCurrent = _ref['aria-current'],
      children = _ref.children,
      customClassName = _ref.className,
      href = _ref.href,
      isCurrentPage = _ref.isCurrentPage,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, _excluded);

  var prefix = usePrefix.usePrefix();
  var className = cx__default["default"]((_cx = {}, _rollupPluginBabelHelpers.defineProperty(_cx, "".concat(prefix, "--breadcrumb-item"), true), _rollupPluginBabelHelpers.defineProperty(_cx, "".concat(prefix, "--breadcrumb-item--current"), isCurrentPage && ariaCurrent !== 'page'), _rollupPluginBabelHelpers.defineProperty(_cx, customClassName, !!customClassName), _cx));

  if (children.type && children.type.displayName !== undefined && children.type.displayName.includes('OverflowMenu')) {
    var horizontalOverflowIcon = /*#__PURE__*/React__default["default"].createElement(iconsReact.OverflowMenuHorizontal, {
      className: "".concat(prefix, "--overflow-menu__icon")
    });
    return /*#__PURE__*/React__default["default"].createElement("li", _rollupPluginBabelHelpers["extends"]({
      className: className
    }, rest), /*#__PURE__*/React__default["default"].cloneElement(children, {
      menuOptionsClass: "".concat(prefix, "--breadcrumb-menu-options"),
      menuOffset: {
        top: 10,
        left: 59
      },
      renderIcon: function renderIcon() {
        return horizontalOverflowIcon;
      }
    }));
  }

  if (typeof children === 'string') {
    return /*#__PURE__*/React__default["default"].createElement("li", _rollupPluginBabelHelpers["extends"]({
      className: className,
      ref: ref
    }, rest), href ? /*#__PURE__*/React__default["default"].createElement(Link["default"], {
      href: href,
      "aria-current": ariaCurrent
    }, children) : /*#__PURE__*/React__default["default"].createElement("span", {
      className: "".concat(prefix, "--link")
    }, children));
  }

  return /*#__PURE__*/React__default["default"].createElement("li", _rollupPluginBabelHelpers["extends"]({
    className: className,
    ref: ref
  }, rest), /*#__PURE__*/React__default["default"].cloneElement(children, {
    'aria-current': ariaCurrent,
    className: cx__default["default"]("".concat(prefix, "--link"), children.props.className)
  }));
});
BreadcrumbItem.displayName = 'BreadcrumbItem';
BreadcrumbItem.propTypes = {
  'aria-current': PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].bool]),

  /**
   * Pass in content that will be inside of the BreadcrumbItem
   */
  children: PropTypes__default["default"].node,

  /**
   * Specify an optional className to be applied to the container node
   */
  className: PropTypes__default["default"].string,

  /**
   * Optional string representing the link location for the BreadcrumbItem
   */
  href: PropTypes__default["default"].string,

  /**
   * Provide if this breadcrumb item represents the current page
   */
  isCurrentPage: PropTypes__default["default"].bool
};
var BreadcrumbItem$1 = BreadcrumbItem;

exports["default"] = BreadcrumbItem$1;
