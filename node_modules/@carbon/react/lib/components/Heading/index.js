/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var PropTypes = require('prop-types');
var React = require('react');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

const HeadingContext = /*#__PURE__*/React__default["default"].createContext(1);
const Section = /*#__PURE__*/React__default["default"].forwardRef(function Section(_ref, ref) {
  let {
    as: BaseComponent = 'section',
    level: levelOverride,
    ...rest
  } = _ref;
  const parentLevel = React__default["default"].useContext(HeadingContext);
  const level = levelOverride ?? parentLevel + 1;
  const BaseComponentAsAny = BaseComponent;
  return /*#__PURE__*/React__default["default"].createElement(HeadingContext.Provider, {
    value: Math.min(level, 6)
  }, /*#__PURE__*/React__default["default"].createElement(BaseComponentAsAny, _rollupPluginBabelHelpers["extends"]({
    ref: ref
  }, rest)));
});
Section.propTypes = {
  /**
   * Provide an alternative tag or component to use instead of the default
   * <section> element
   */
  as: PropTypes__default["default"].elementType,
  /**
   * Specify the content that will be placed in the component
   */
  children: PropTypes__default["default"].node,
  /**
   * Specify a class name for the outermost node of the component
   */
  className: PropTypes__default["default"].string,
  /**
   * Overrides the level of the section
   */
  level: PropTypes__default["default"].number
};
const Heading = /*#__PURE__*/React__default["default"].forwardRef(function Heading(props, ref) {
  const HeadingIntrinsic = `h${React__default["default"].useContext(HeadingContext)}`;
  return /*#__PURE__*/React__default["default"].createElement(HeadingIntrinsic, _rollupPluginBabelHelpers["extends"]({
    ref: ref
  }, props));
});
Heading.propTypes = {
  /**
   * Specify the content that will be placed in the component
   */
  children: PropTypes__default["default"].node,
  /**
   * Specify a class name for the outermost node of the component
   */
  className: PropTypes__default["default"].string
};

exports.Heading = Heading;
exports.Section = Section;
