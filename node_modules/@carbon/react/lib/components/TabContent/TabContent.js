/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var PropTypes = require('prop-types');
var React = require('react');
var cx = require('classnames');
var navigation = require('../../internal/keyboard/navigation.js');
var useIsomorphicEffect = require('../../internal/useIsomorphicEffect.js');
var usePrefix = require('../../internal/usePrefix.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);

var _excluded = ["className", "selected", "children"];
/**
 * Determine if the node within the provided ref contains content that is tabbable.
 */

function useTabbableContent(ref) {
  var _useState = React.useState(false),
      _useState2 = _rollupPluginBabelHelpers.slicedToArray(_useState, 2),
      hasTabbableContent = _useState2[0],
      setHasTabbableContent = _useState2[1];

  useIsomorphicEffect["default"](function () {
    if (ref.current) {
      setHasTabbableContent(ref.current.querySelector(navigation.selectorTabbable));
    }
  });
  return hasTabbableContent;
}

var TabContent = function TabContent(props) {
  var className = props.className,
      selected = props.selected,
      children = props.children,
      other = _rollupPluginBabelHelpers.objectWithoutProperties(props, _excluded);

  var prefix = usePrefix.usePrefix();
  var tabContentClasses = cx__default["default"]("".concat(prefix, "--tab-content"), _rollupPluginBabelHelpers.defineProperty({}, className, className));
  var ref = React.useRef(null);
  var hasTabbableContent = useTabbableContent(ref);
  return /*#__PURE__*/React__default["default"].createElement("div", _rollupPluginBabelHelpers["extends"]({
    role: "tabpanel"
  }, other, {
    className: tabContentClasses,
    selected: selected,
    hidden: !selected,
    ref: ref,
    tabIndex: hasTabbableContent ? undefined : 0
  }), children);
};

TabContent.propTypes = {
  /**
   * Pass in content to render inside of the TabContent
   */
  children: PropTypes__default["default"].node,

  /**
   * Provide a className for the tab content container
   */
  className: PropTypes__default["default"].string,

  /**
   * Specify whether the TabContent is selected
   */
  selected: PropTypes__default["default"].bool
};
TabContent.defaultProps = {
  selected: false
};
var TabContent$1 = TabContent;

exports["default"] = TabContent$1;
