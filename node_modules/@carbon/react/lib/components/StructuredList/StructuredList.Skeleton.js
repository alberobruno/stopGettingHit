/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var PropTypes = require('prop-types');
var React = require('react');
var cx = require('classnames');
var usePrefix = require('../../internal/usePrefix.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);

var _span, _span2, _span3;

var _excluded = ["rowCount", "border", "className"];

var StructuredListSkeleton = function StructuredListSkeleton(_ref) {
  var _cx;

  var rowCount = _ref.rowCount,
      border = _ref.border,
      className = _ref.className,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, _excluded);

  var prefix = usePrefix.usePrefix();
  var StructuredListSkeletonClasses = cx__default["default"](className, (_cx = {}, _rollupPluginBabelHelpers.defineProperty(_cx, "".concat(prefix, "--skeleton"), true), _rollupPluginBabelHelpers.defineProperty(_cx, "".concat(prefix, "--structured-list"), true), _rollupPluginBabelHelpers.defineProperty(_cx, "".concat(prefix, "--structured-list--border"), border), _cx));
  var rows = [];

  for (var i = 0; i < rowCount; i++) {
    rows.push( /*#__PURE__*/React__default["default"].createElement("div", {
      className: "".concat(prefix, "--structured-list-row"),
      key: i
    }, /*#__PURE__*/React__default["default"].createElement("div", {
      className: "".concat(prefix, "--structured-list-td")
    }), /*#__PURE__*/React__default["default"].createElement("div", {
      className: "".concat(prefix, "--structured-list-td")
    }), /*#__PURE__*/React__default["default"].createElement("div", {
      className: "".concat(prefix, "--structured-list-td")
    })));
  }

  return /*#__PURE__*/React__default["default"].createElement("div", _rollupPluginBabelHelpers["extends"]({
    className: StructuredListSkeletonClasses
  }, rest), /*#__PURE__*/React__default["default"].createElement("div", {
    className: "".concat(prefix, "--structured-list-thead")
  }, /*#__PURE__*/React__default["default"].createElement("div", {
    className: "".concat(prefix, "--structured-list-row ").concat(prefix, "--structured-list-row--header-row")
  }, /*#__PURE__*/React__default["default"].createElement("div", {
    className: "".concat(prefix, "--structured-list-th")
  }, _span || (_span = /*#__PURE__*/React__default["default"].createElement("span", null))), /*#__PURE__*/React__default["default"].createElement("div", {
    className: "".concat(prefix, "--structured-list-th")
  }, _span2 || (_span2 = /*#__PURE__*/React__default["default"].createElement("span", null))), /*#__PURE__*/React__default["default"].createElement("div", {
    className: "".concat(prefix, "--structured-list-th")
  }, _span3 || (_span3 = /*#__PURE__*/React__default["default"].createElement("span", null))))), /*#__PURE__*/React__default["default"].createElement("div", {
    className: "".concat(prefix, "--structured-list-tbody")
  }, rows));
};

StructuredListSkeleton.propTypes = {
  /**
   * Specify whether a border should be added to your StructuredListSkeleton
   */
  border: PropTypes__default["default"].bool,

  /**
   * Specify an optional className to add.
   */
  className: PropTypes__default["default"].string,

  /**
   * number of table rows
   */
  rowCount: PropTypes__default["default"].number
};
StructuredListSkeleton.defaultProps = {
  rowCount: 5,
  border: false
};
var StructuredListSkeleton$1 = StructuredListSkeleton;

exports["default"] = StructuredListSkeleton$1;
