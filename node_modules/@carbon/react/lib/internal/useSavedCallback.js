/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');

/**
 * Provide a stable reference for a callback that is passed as a prop to a
 * component. This is helpful when you want access to the latest version of a
 * callback prop but don't want it to be added to the dependency array of an
 * effect.
 *
 * @param {Function | undefined} callback
 * @returns {Function}
 */
function useSavedCallback(callback) {
  const savedCallback = React.useRef(callback);
  React.useEffect(() => {
    savedCallback.current = callback;
  });
  return React.useCallback(function () {
    if (savedCallback.current) {
      return savedCallback.current(...arguments);
    }
  }, []);
}

exports.useSavedCallback = useSavedCallback;
