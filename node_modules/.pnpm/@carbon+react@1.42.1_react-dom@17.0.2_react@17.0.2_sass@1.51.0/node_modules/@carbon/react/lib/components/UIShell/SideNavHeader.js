/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var cx = require('classnames');
var PropTypes = require('prop-types');
var React = require('react');
var SideNavIcon = require('./SideNavIcon.js');
var usePrefix = require('../../internal/usePrefix.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

const SideNavHeader = _ref => {
  let {
    className: customClassName,
    children,
    renderIcon: IconElement
  } = _ref;
  const prefix = usePrefix.usePrefix();
  const className = cx__default["default"](`${prefix}--side-nav__header`, customClassName);
  return /*#__PURE__*/React__default["default"].createElement("header", {
    className: className
  }, /*#__PURE__*/React__default["default"].createElement(SideNavIcon["default"], null, /*#__PURE__*/React__default["default"].createElement(IconElement, null)), children);
};
SideNavHeader.displayName = 'SideNavHeader';
SideNavHeader.propTypes = {
  /**
   * The child nodes to be rendered
   */
  children: PropTypes__default["default"].node,
  /**
   * Provide an optional class to be applied to the containing node
   */
  className: PropTypes__default["default"].string,
  /**
   * Property to indicate if the side nav container is open (or not). Use to
   * keep local state and styling in step with the SideNav expansion state.
   */
  isSideNavExpanded: PropTypes__default["default"].bool,
  /**
   * Provide an icon to render in the header of the side navigation. Should be
   * a React class.
   */
  renderIcon: PropTypes__default["default"].oneOfType([PropTypes__default["default"].func, PropTypes__default["default"].object]).isRequired
};
var SideNavHeader$1 = SideNavHeader;

exports["default"] = SideNavHeader$1;
