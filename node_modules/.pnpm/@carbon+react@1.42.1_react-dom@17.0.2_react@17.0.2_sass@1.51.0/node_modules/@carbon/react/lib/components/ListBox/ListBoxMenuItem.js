/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var cx = require('classnames');
var React = require('react');
var PropTypes = require('prop-types');
var usePrefix = require('../../internal/usePrefix.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);

function useIsTruncated(ref) {
  const [isTruncated, setIsTruncated] = React.useState(false);
  React.useEffect(() => {
    const element = ref.current;
    const {
      offsetWidth,
      scrollWidth
    } = element.lastElementChild?.lastElementChild || element;
    setIsTruncated(offsetWidth < scrollWidth);
  }, [ref, setIsTruncated]);
  return isTruncated;
}
/**
 * `ListBoxMenuItem` is a helper component for managing the container class
 * name, alongside any classes for any corresponding states, for a generic list
 * box menu item.
 */
const ListBoxMenuItem = /*#__PURE__*/React__default["default"].forwardRef(function ListBoxMenuItem(_ref, forwardedRef) {
  let {
    children,
    isActive = false,
    isHighlighted = false,
    title,
    ...rest
  } = _ref;
  const prefix = usePrefix.usePrefix();
  const ref = React.useRef(null);
  const isTruncated = useIsTruncated(forwardedRef?.menuItemOptionRef || ref);
  const className = cx__default["default"](`${prefix}--list-box__menu-item`, {
    [`${prefix}--list-box__menu-item--active`]: isActive,
    [`${prefix}--list-box__menu-item--highlighted`]: isHighlighted
  });
  return /*#__PURE__*/React__default["default"].createElement("li", _rollupPluginBabelHelpers["extends"]({}, rest, {
    className: className,
    title: isTruncated ? title : undefined
  }), /*#__PURE__*/React__default["default"].createElement("div", {
    className: `${prefix}--list-box__menu-item__option`,
    ref: forwardedRef?.menuItemOptionRef || ref
  }, children));
});
ListBoxMenuItem.displayName = 'ListBoxMenuItem';
ListBoxMenuItem.propTypes = {
  /**
   * Specify any children nodes that should be rendered inside of the ListBox
   * Menu Item
   */
  children: PropTypes__default["default"].node,
  /**
   * Specify if the item should be disabled
   */
  disabled: PropTypes__default["default"].bool,
  /**
   * Specify whether the current menu item is "active".
   */
  isActive: PropTypes__default["default"].bool,
  /**
   * Specify whether the current menu item is "highlighted".
   */
  isHighlighted: PropTypes__default["default"].bool,
  /**
   * Provide an optional tooltip for the ListBoxMenuItem
   */
  title: PropTypes__default["default"].string
};

exports["default"] = ListBoxMenuItem;
