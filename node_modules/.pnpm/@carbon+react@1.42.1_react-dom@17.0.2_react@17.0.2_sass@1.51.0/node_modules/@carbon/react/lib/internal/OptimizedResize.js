/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var window = require('window-or-global');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var window__default = /*#__PURE__*/_interopDefaultLegacy(window);

// mdn resize function
const OptimizedResize = function optimizedResize() {
  const callbacks = [];
  let running = false;

  // run the actual callbacks
  function runCallbacks() {
    callbacks.forEach(callback => {
      callback();
    });
    running = false;
  }

  // fired on resize event
  function resize() {
    if (!running) {
      running = true;
      window__default["default"].requestAnimationFrame(runCallbacks);
    }
  }

  // adds callback to loop
  function addCallback(callback) {
    if (callback) {
      const index = callbacks.indexOf(callback);
      if (index < 0) {
        callbacks.push(callback);
      }
    }
  }
  return {
    // public method to add additional callback
    add: callback => {
      if (!callbacks.length) {
        window__default["default"].addEventListener('resize', resize);
      }
      addCallback(callback);
      return {
        release() {
          const index = callbacks.indexOf(callback);
          if (index >= 0) {
            callbacks.splice(index, 1);
          }
        }
      };
    }
  };
}();
var OptimizedResize$1 = OptimizedResize;

exports["default"] = OptimizedResize$1;
