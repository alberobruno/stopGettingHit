/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import React__default, { useRef } from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';
import { OverflowMenuVertical } from '@carbon/icons-react';
import { IconButton } from '../../IconButton/index.js';
import { Menu } from '../../Menu/Menu.js';
import { useId } from '../../../internal/useId.js';
import { usePrefix } from '../../../internal/usePrefix.js';
import { useAttachedMenu } from '../../../internal/useAttachedMenu.js';

const defaultSize = 'md';
const OverflowMenu = /*#__PURE__*/React__default.forwardRef(function OverflowMenu(_ref, forwardRef) {
  let {
    children,
    className,
    label = 'Options',
    renderIcon: IconElement = OverflowMenuVertical,
    size = defaultSize,
    tooltipAlignment,
    ...rest
  } = _ref;
  const id = useId('overflowmenu');
  const prefix = usePrefix();
  const triggerRef = useRef(null);
  const {
    open,
    x,
    y,
    handleClick,
    handleMousedown,
    handleClose
  } = useAttachedMenu(triggerRef);
  const containerClasses = cx(className, `${prefix}--overflow-menu__container`);
  const triggerClasses = cx(`${prefix}--overflow-menu`, {
    [`${prefix}--overflow-menu--open`]: open
  }, size !== defaultSize && `${prefix}--overflow-menu--${size}`);
  return /*#__PURE__*/React__default.createElement("div", _extends({}, rest, {
    className: containerClasses,
    "aria-owns": open ? id : null,
    ref: forwardRef
  }), /*#__PURE__*/React__default.createElement(IconButton, {
    "aria-controls": open ? id : null,
    "aria-haspopup": true,
    "aria-expanded": open,
    className: triggerClasses,
    onClick: handleClick,
    onMouseDown: handleMousedown,
    ref: triggerRef,
    label: label,
    align: tooltipAlignment
  }, /*#__PURE__*/React__default.createElement(IconElement, {
    className: `${prefix}--overflow-menu__icon`
  })), /*#__PURE__*/React__default.createElement(Menu, {
    id: id,
    size: size,
    open: open,
    onClose: handleClose,
    x: x,
    y: y,
    label: label
  }, children));
});
OverflowMenu.propTypes = {
  /**
   * A collection of MenuItems to be rendered within this OverflowMenu.
   */
  children: PropTypes.node,
  /**
   * Additional CSS class names for the trigger button.
   */
  className: PropTypes.string,
  /**
   * A label describing the options available. Is used in the trigger tooltip and as the menu's accessible label.
   */
  label: PropTypes.string,
  /**
   * Otionally provide a custom icon to be rendered on the trigger button.
   */
  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),
  /**
   * Specify the size of the menu, from a list of available sizes.
   */
  size: PropTypes.oneOf(['sm', 'md', 'lg']),
  /**
   * Specify how the trigger tooltip should be aligned.
   */
  tooltipAlignment: PropTypes.oneOf(['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right', 'left', 'right'])
};

export { OverflowMenu };
