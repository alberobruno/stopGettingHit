/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import PropTypes from 'prop-types';
import React from 'react';
import { PolymorphicProps } from '../../types/common';
import { TextDir } from './TextDirection';
export interface TextBaseProps {
    dir?: TextDir | undefined;
}
export type TextProps<T extends React.ElementType> = PolymorphicProps<T, TextBaseProps>;
declare function Text<T extends React.ElementType>({ as, children, dir, ...rest }: TextProps<T>): JSX.Element;
declare namespace Text {
    var propTypes: {
        /**
         * Provide a custom element type used to render the outermost node
         */
        as: PropTypes.Requireable<NonNullable<((...args: any[]) => any) | PropTypes.ReactComponentLike | null | undefined>>;
        /**
         * Provide child elements or text to be rendered inside of this component
         */
        children: PropTypes.Validator<NonNullable<PropTypes.ReactNodeLike>>;
        /**
         * Specify the text direction to be used for this component and any of its
         * children
         */
        dir: PropTypes.Requireable<string>;
    };
}
export { Text };
