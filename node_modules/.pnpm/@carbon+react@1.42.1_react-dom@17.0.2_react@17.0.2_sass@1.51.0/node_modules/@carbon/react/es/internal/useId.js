/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import React__default, { useLayoutEffect, useEffect, useState } from 'react';
import setupGetInstanceId from '../tools/setupGetInstanceId.js';
import { canUseDOM } from './environment.js';
import { useIdPrefix } from './useIdPrefix.js';

// This file was heavily inspired by Reach UI and their work on their auto-id
const getId = setupGetInstanceId();
const useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;
let serverHandoffCompleted = false;

/**
 * Generate a unique ID with an optional prefix prepended to it
 * @param {string} [prefix]
 * @returns {string}
 */
function useId() {
  let prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'id';
  const _prefix = useIdPrefix();
  const [id, setId] = useState(() => {
    if (serverHandoffCompleted) {
      return `${_prefix ? `${_prefix}-` : ``}${prefix}-${getId()}`;
    }
    return null;
  });
  useIsomorphicLayoutEffect(() => {
    if (id === null) {
      setId(`${_prefix ? `${_prefix}-` : ``}${prefix}-${getId()}`);
    }
  }, [getId]);
  useEffect(() => {
    if (serverHandoffCompleted === false) {
      serverHandoffCompleted = true;
    }
  }, []);
  if (typeof React__default['useId'] === 'function') {
    const id = nativeReactUseId(_prefix, prefix);
    return id;
  }
  return id;
}
function nativeReactUseId(_prefix, prefix) {
  const getId = React__default['useId']();
  const id = `${_prefix ? `${_prefix}-` : ``}${prefix}-${getId}`;
  return id;
}

/**
 * Generate a unique id if a given `id` is not provided
 * @param {string|undefined} id
 * @returns {string}
 */
function useFallbackId(id) {
  const fallback = useId();
  return id ?? fallback;
}

export { useFallbackId, useId };
