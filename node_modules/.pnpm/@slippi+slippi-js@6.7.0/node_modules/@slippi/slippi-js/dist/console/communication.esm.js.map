{"version":3,"file":"communication.esm.js","sources":["../../src/console/communication.ts"],"sourcesContent":["import { decode, encode } from \"@shelacek/ubjson\";\n\nexport enum CommunicationType {\n  HANDSHAKE = 1,\n  REPLAY = 2,\n  KEEP_ALIVE = 3,\n}\n\nexport interface CommunicationMessage {\n  type: CommunicationType;\n  payload: {\n    cursor: Uint8Array;\n    clientToken: Uint8Array;\n    pos: Uint8Array;\n    nextPos: Uint8Array;\n    data: Uint8Array;\n    nick: string | null;\n    forcePos: boolean;\n    nintendontVersion: string | null;\n  };\n}\n\n// This class is responsible for handling the communication protocol between the Wii and the\n// desktop app\nexport class ConsoleCommunication {\n  private receiveBuf = Buffer.from([]);\n  private messages = new Array<CommunicationMessage>();\n\n  public receive(data: Buffer): void {\n    this.receiveBuf = Buffer.concat([this.receiveBuf, data]);\n\n    while (this.receiveBuf.length >= 4) {\n      // First get the size of the message we are expecting\n      const msgSize = this.receiveBuf.readUInt32BE(0);\n\n      if (this.receiveBuf.length < msgSize + 4) {\n        // If we haven't received all the data yet, let's wait for more\n        return;\n      }\n\n      // Here we have received all the data, so let's decode it\n      const ubjsonData = this.receiveBuf.slice(4, msgSize + 4);\n      this.messages.push(decode(ubjsonData));\n\n      // Remove the processed data from receiveBuf\n      this.receiveBuf = this.receiveBuf.slice(msgSize + 4);\n    }\n  }\n\n  public getReceiveBuffer(): Buffer {\n    return this.receiveBuf;\n  }\n\n  public getMessages(): Array<CommunicationMessage> {\n    const toReturn = this.messages;\n    this.messages = [];\n\n    return toReturn;\n  }\n\n  public genHandshakeOut(cursor: Uint8Array, clientToken: number, isRealtime = false): Buffer {\n    const clientTokenBuf = Buffer.from([0, 0, 0, 0]);\n    clientTokenBuf.writeUInt32BE(clientToken, 0);\n\n    const message = {\n      type: CommunicationType.HANDSHAKE,\n      payload: {\n        cursor: cursor,\n        clientToken: Uint8Array.from(clientTokenBuf), // TODO: Use real instance token\n        isRealtime: isRealtime,\n      },\n    };\n\n    const buf = encode(message, {\n      optimizeArrays: true,\n    });\n\n    const msg = Buffer.concat([Buffer.from([0, 0, 0, 0]), Buffer.from(buf)]);\n\n    msg.writeUInt32BE(buf.byteLength, 0);\n\n    return msg;\n  }\n}\n"],"names":["CommunicationType","ConsoleCommunication","receiveBuf","Buffer","from","messages","Array","receive","data","concat","length","msgSize","readUInt32BE","ubjsonData","slice","push","decode","getReceiveBuffer","getMessages","toReturn","genHandshakeOut","cursor","clientToken","isRealtime","clientTokenBuf","writeUInt32BE","message","type","HANDSHAKE","payload","Uint8Array","buf","encode","optimizeArrays","msg","byteLength"],"mappings":";;IAEYA;;AAAZ,WAAYA;AACVA,EAAAA,qDAAA,cAAA;AACAA,EAAAA,kDAAA,WAAA;AACAA,EAAAA,sDAAA,eAAA;AACD,CAJD,EAAYA,iBAAiB,KAAjBA,iBAAiB,KAAA,CAA7B;AAqBA;;;MACaC;;SACHC,aAAaC,MAAM,CAACC,IAAP,CAAY,EAAZ;SACbC,WAAW,IAAIC,KAAJ;;;AAEZC,EAAAA,OAAO,CAACC,IAAD;AACZ,SAAKN,UAAL,GAAkBC,MAAM,CAACM,MAAP,CAAc,CAAC,KAAKP,UAAN,EAAkBM,IAAlB,CAAd,CAAlB;;AAEA,WAAO,KAAKN,UAAL,CAAgBQ,MAAhB,IAA0B,CAAjC,EAAoC;AAClC;AACA,YAAMC,OAAO,GAAG,KAAKT,UAAL,CAAgBU,YAAhB,CAA6B,CAA7B,CAAhB;;AAEA,UAAI,KAAKV,UAAL,CAAgBQ,MAAhB,GAAyBC,OAAO,GAAG,CAAvC,EAA0C;AACxC;AACA;AACD,OAPiC;;;AAUlC,YAAME,UAAU,GAAG,KAAKX,UAAL,CAAgBY,KAAhB,CAAsB,CAAtB,EAAyBH,OAAO,GAAG,CAAnC,CAAnB;AACA,WAAKN,QAAL,CAAcU,IAAd,CAAmBC,MAAM,CAACH,UAAD,CAAzB,EAXkC;;AAclC,WAAKX,UAAL,GAAkB,KAAKA,UAAL,CAAgBY,KAAhB,CAAsBH,OAAO,GAAG,CAAhC,CAAlB;AACD;AACF;;AAEMM,EAAAA,gBAAgB;AACrB,WAAO,KAAKf,UAAZ;AACD;;AAEMgB,EAAAA,WAAW;AAChB,UAAMC,QAAQ,GAAG,KAAKd,QAAtB;AACA,SAAKA,QAAL,GAAgB,EAAhB;AAEA,WAAOc,QAAP;AACD;;AAEMC,EAAAA,eAAe,CAACC,MAAD,EAAqBC,WAArB,EAA0CC,UAAU,GAAG,KAAvD;AACpB,UAAMC,cAAc,GAAGrB,MAAM,CAACC,IAAP,CAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAZ,CAAvB;AACAoB,IAAAA,cAAc,CAACC,aAAf,CAA6BH,WAA7B,EAA0C,CAA1C;AAEA,UAAMI,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAE3B,iBAAiB,CAAC4B,SADV;AAEdC,MAAAA,OAAO,EAAE;AACPR,QAAAA,MAAM,EAAEA,MADD;AAEPC,QAAAA,WAAW,EAAEQ,UAAU,CAAC1B,IAAX,CAAgBoB,cAAhB,CAFN;AAGPD,QAAAA,UAAU,EAAEA;AAHL;AAFK,KAAhB;AASA,UAAMQ,GAAG,GAAGC,MAAM,CAACN,OAAD,EAAU;AAC1BO,MAAAA,cAAc,EAAE;AADU,KAAV,CAAlB;AAIA,UAAMC,GAAG,GAAG/B,MAAM,CAACM,MAAP,CAAc,CAACN,MAAM,CAACC,IAAP,CAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAZ,CAAD,EAA4BD,MAAM,CAACC,IAAP,CAAY2B,GAAZ,CAA5B,CAAd,CAAZ;AAEAG,IAAAA,GAAG,CAACT,aAAJ,CAAkBM,GAAG,CAACI,UAAtB,EAAkC,CAAlC;AAEA,WAAOD,GAAP;AACD;;;;;;"}