{"version":3,"file":"ubjson.js","sources":["../src/ubjson-encoder.js","../src/ubjson-decoder.js","../src/ubjson.js"],"sourcesContent":["export class UbjsonEncoder {\n\tconstructor(options = {}) {\n\t\tthis._options = options;\n\t\tthis._textEncoder = new (typeof TextEncoder !== 'undefined'\n\t\t\t? TextEncoder\n\t\t\t: require('util').TextEncoder // eslint-disable-line global-require\n\t\t)();\n\t}\n\n\tencode(value) {\n\t\tconst packers = this._encode(value);\n\t\tconst size = packers.reduce((acc, x) => acc + x.byteLength, 0);\n\t\tconst array = new Uint8Array(size);\n\t\tconst view = new DataView(array.buffer);\n\t\tconst storage = { array, view };\n\t\tlet offset = 0;\n\t\tfor (const packer of packers) {\n\t\t\tpacker.storer(storage, offset);\n\t\t\toffset += packer.byteLength;\n\t\t}\n\t\treturn array.buffer;\n\t}\n\n\t_encode(value) {\n\t\tconst type = this._getType(value);\n\t\treturn [\n\t\t\tthis._packType(type),\n\t\t\t...this._encodeValue(value, type)\n\t\t];\n\t}\n\n\t_encodeValue(value, type) {\n\t\tlet char;\n\t\tlet bytes;\n\t\tswitch (type) {\n\t\t\tcase 'C':\n\t\t\t\tchar = value.charCodeAt();\n\t\t\t\treturn [this._pack(({ view }, offset) => view.setInt8(offset, char), 1)];\n\t\t\tcase 'S':\n\t\t\t\tbytes = this._textEncoder.encode(value);\n\t\t\t\treturn [\n\t\t\t\t\t...this._encode(bytes.byteLength),\n\t\t\t\t\tthis._packTypedArray(bytes)\n\t\t\t\t];\n\t\t\tcase 'i':\n\t\t\t\treturn [this._pack(({ view }, offset) => view.setInt8(offset, value), 1)];\n\t\t\tcase 'U':\n\t\t\t\treturn [this._pack(({ view }, offset) => view.setUint8(offset, value), 1)];\n\t\t\tcase 'I':\n\t\t\t\treturn [this._pack(({ view }, offset) => view.setInt16(offset, value), 2)];\n\t\t\tcase 'l':\n\t\t\t\treturn [this._pack(({ view }, offset) => view.setInt32(offset, value), 4)];\n\t\t\tcase 'd':\n\t\t\t\treturn [this._pack(({ view }, offset) => view.setFloat32(offset, value), 4)];\n\t\t\tcase 'D':\n\t\t\t\treturn [this._pack(({ view }, offset) => view.setFloat64(offset, value), 8)];\n\t\t\tcase '[':\n\t\t\t\treturn this._encodeArray(value);\n\t\t\tcase '{':\n\t\t\t\treturn this._encodeObject(value);\n\t\t}\n\t\treturn [];\n\t}\n\n\t_getType(value) {\n\t\tif (value === null) {\n\t\t\treturn 'Z';\n\t\t}\n\t\tswitch (typeof value) {\n\t\t\tcase 'undefined':\n\t\t\t\treturn 'N';\n\t\t\tcase 'boolean':\n\t\t\t\treturn value ? 'T' : 'F';\n\t\t\tcase 'string':\n\t\t\t\treturn (value.length === 1 && value.charCodeAt() <= 127) ? 'C' : 'S';\n\t\t\tcase 'number':\n\t\t\t\tif (Number.isInteger(value)) {\n\t\t\t\t\tif (-128 <= value && value <= 127) {\n\t\t\t\t\t\treturn 'i';\n\t\t\t\t\t}\n\t\t\t\t\tif (0 <= value && value <= 255) {\n\t\t\t\t\t\treturn 'U';\n\t\t\t\t\t}\n\t\t\t\t\tif (-32768 <= value && value <= 32767) {\n\t\t\t\t\t\treturn 'I';\n\t\t\t\t\t}\n\t\t\t\t\tif (-2147483648 <= value && value <= 2147483647) {\n\t\t\t\t\t\treturn 'l';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn (Number.isNaN(value) || Math.fround(value) === value) ? 'd' : 'D';\n\t\t\tcase 'object':\n\t\t\t\treturn Array.isArray(value) || ArrayBuffer.isView(value) ? '[' : '{';\n\t\t}\n\t\tthrow new Error('Value cannot be serialized');\n\t}\n\n\t_encodeArray(value) {\n\t\tlet type;\n\t\tif ((this._options.optimizeArrays === true\n\t\t\t\t|| this._options.optimizeArrays === 'onlyTypedArrays')\n\t\t\t\t&& ArrayBuffer.isView(value)) {\n\t\t\tswitch (value.constructor.name) {\n\t\t\t\tcase 'Int8Array':\n\t\t\t\t\treturn [].concat(\n\t\t\t\t\t\tthis._packContainerMarkers('i', value.length),\n\t\t\t\t\t\tthis._packTypedArray(value)\n\t\t\t\t\t);\n\t\t\t\tcase 'Uint8Array':\n\t\t\t\t\treturn [].concat(\n\t\t\t\t\t\tthis._packContainerMarkers('U', value.length),\n\t\t\t\t\t\tthis._packTypedArray(value)\n\t\t\t\t\t);\n\t\t\t\tcase 'Int16Array':\n\t\t\t\t\ttype = 'I';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Int32Array':\n\t\t\t\t\ttype = 'l';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Float32Array':\n\t\t\t\t\ttype = 'd';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Float64Array':\n\t\t\t\t\ttype = 'D';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst items = (Array.isArray(value) ? value : Array.from(value)).map(x => ({\n\t\t\ttype: type || this._getType(x),\n\t\t\tvalue: x\n\t\t}));\n\t\treturn this._packContainerItems(items, ']', type || this._options.optimizeArrays === true);\n\t}\n\n\t_encodeObject(value) {\n\t\tconst items = Object.entries(value).map(x => ({\n\t\t\tkey: x[0],\n\t\t\ttype: this._getType(x[1]),\n\t\t\tvalue: x[1]\n\t\t}));\n\t\treturn this._packContainerItems(items, '}', this._options.optimizeObjects === true);\n\t}\n\n\t_packContainerMarkers(type, count) {\n\t\tconst packers = [];\n\t\tif (count != null) {\n\t\t\tif (type) {\n\t\t\t\tpackers.push(this._packType('$'), this._packType(type));\n\t\t\t}\n\t\t\tpackers.push(this._packType('#'), ...this._encode(count));\n\t\t}\n\t\treturn packers;\n\t}\n\n\t_packContainerItems(items, terminator, optimize) {\n\t\tlet type;\n\t\tlet count;\n\t\tif (optimize) {\n\t\t\tif (items.length) {\n\t\t\t\ttype = this._obtainCommonType(items);\n\t\t\t}\n\t\t\tcount = items.length;\n\t\t}\n\t\tconst packers = this._packContainerMarkers(type, count);\n\t\tfor (const item of items) {\n\t\t\titem.key != null && item.type !== 'N' && packers.push(...this._encodeValue(item.key, 'S'));\n\t\t\t!type && packers.push(this._packType(item.type));\n\t\t\tpackers.push(...this._encodeValue(item.value, type || item.type));\n\t\t}\n\t\tif (count == null) {\n\t\t\tpackers.push(this._packType(terminator));\n\t\t}\n\t\treturn packers;\n\t}\n\n\t_obtainCommonType(items) {\n\t\tconst type = items.map(x => x.type).reduce(this._typeReducer);\n\t\treturn (type === 'U' && items.some(x => x.value < 0)) ? 'I' : type;\n\t}\n\n\t_typeReducer(a, b) {\n\t\tif (a === b) {\n\t\t\treturn a;\n\t\t}\n\t\tif (!a) {\n\t\t\treturn null;\n\t\t}\n\t\tconst reduceTo = seq => seq[Math.min(seq.indexOf(a), seq.indexOf(b))];\n\t\treturn reduceTo('Dd') || reduceTo('SC') || reduceTo('lIUi');\n\t}\n\n\t_packType(value) {\n\t\treturn this._pack(({ view }, offset) => view.setInt8(offset, value.charCodeAt()), 1);\n\t}\n\n\t_packTypedArray(value) {\n\t\treturn this._pack(({ array }, offset) => array.set(value, offset), value.byteLength);\n\t}\n\n\t_pack(storer, byteLength) {\n\t\treturn { storer, byteLength };\n\t}\n}\n","export class UbjsonDecoder {\n\tconstructor(options = {}) {\n\t\tthis._options = options;\n\t\tthis._textDecoder = new (typeof TextDecoder !== 'undefined'\n\t\t\t? TextDecoder\n\t\t\t: require('util').TextDecoder // eslint-disable-line global-require\n\t\t)();\n\t}\n\n\tdecode(buffer) {\n\t\tconst array = new Uint8Array(buffer);\n\t\tconst view = new DataView(array.buffer);\n\t\tthis._storage = { array, view };\n\t\tthis._offset = 0;\n\t\treturn this._decode();\n\t}\n\n\t_decode(type = this._readType(false)) {\n\t\tswitch (type) {\n\t\t\tcase 'Z':\n\t\t\t\treturn null;\n\t\t\tcase 'N':\n\t\t\t\treturn undefined;\n\t\t\tcase 'T':\n\t\t\t\treturn true;\n\t\t\tcase 'F':\n\t\t\t\treturn false;\n\t\t\tcase 'i':\n\t\t\t\treturn this._read(({ view }, offset) => view.getInt8(offset), 1);\n\t\t\tcase 'U':\n\t\t\t\treturn this._read(({ view }, offset) => view.getUint8(offset), 1);\n\t\t\tcase 'I':\n\t\t\t\treturn this._read(({ view }, offset) => view.getInt16(offset), 2);\n\t\t\tcase 'l':\n\t\t\t\treturn this._read(({ view }, offset) => view.getInt32(offset), 4);\n\t\t\tcase 'L':\n\t\t\t\treturn this._handleUnsupported(8, this._options.int64Handling, true);\n\t\t\tcase 'd':\n\t\t\t\treturn this._read(({ view }, offset) => view.getFloat32(offset), 4);\n\t\t\tcase 'D':\n\t\t\t\treturn this._read(({ view }, offset) => view.getFloat64(offset), 8);\n\t\t\tcase 'H':\n\t\t\t\treturn this._handleUnsupported(\n\t\t\t\t\tthis._decodeCount(),\n\t\t\t\t\tthis._options.highPrecisionNumberHandling,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\tcase 'C':\n\t\t\t\treturn String.fromCharCode(this._decode('i'));\n\t\t\tcase 'S':\n\t\t\t\treturn this._readString(this._decodeCount());\n\t\t\tcase '[':\n\t\t\t\treturn this._decodeArray();\n\t\t\tcase '{':\n\t\t\t\treturn this._decodeObject();\n\t\t}\n\t\tthrow new Error('Unexpected type');\n\t}\n\n\t_decodeContainerMarkers() {\n\t\tlet type;\n\t\tlet count;\n\t\tswitch (this._readType(true)) {\n\t\t\tcase '$':\n\t\t\t\tthis._skip();\n\t\t\t\ttype = this._readType(false);\n\t\t\t\tif (this._readType(true) !== '#') {\n\t\t\t\t\tthrow new Error('Expected count marker');\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '#':\n\t\t\t\tthis._skip();\n\t\t\t\tcount = this._decodeCount();\n\t\t\t\tbreak;\n\t\t}\n\t\treturn { type, count };\n\t}\n\n\t_decodeArray() {\n\t\tconst { type, count } = this._decodeContainerMarkers();\n\t\tif ('ZTF'.indexOf(type) !== -1) {\n\t\t\treturn new Array(count).fill(this._decode(type));\n\t\t}\n\t\tif (this._options.useTypedArrays) {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'i':\n\t\t\t\t\treturn this._readInt8Array(count);\n\t\t\t\tcase 'U':\n\t\t\t\t\treturn this._readUint8Array(count);\n\t\t\t\tcase 'I':\n\t\t\t\t\treturn Int16Array.from({ length: count }, () => this._decode(type));\n\t\t\t\tcase 'l':\n\t\t\t\t\treturn Int32Array.from({ length: count }, () => this._decode(type));\n\t\t\t\tcase 'd':\n\t\t\t\t\treturn Float32Array.from({ length: count }, () => this._decode(type));\n\t\t\t\tcase 'D':\n\t\t\t\t\treturn Float64Array.from({ length: count }, () => this._decode(type));\n\t\t\t}\n\t\t}\n\t\tif (count != null) {\n\t\t\tconst array = new Array(count);\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tarray[i] = this._decode(type);\n\t\t\t}\n\t\t\treturn array;\n\t\t}\n\t\telse {\n\t\t\tconst array = [];\n\t\t\twhile (this._readType(true) !== ']') {\n\t\t\t\tarray.push(this._decode());\n\t\t\t}\n\t\t\tthis._skip();\n\t\t\treturn array;\n\t\t}\n\t}\n\n\t_decodeObject() {\n\t\tconst { type, count } = this._decodeContainerMarkers();\n\t\tconst object = {};\n\t\tif (count != null) {\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tconst key = this._decode('S');\n\t\t\t\tobject[key] = this._decode(type);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\twhile (this._readType(true) !== '}') {\n\t\t\t\tconst key = this._decode('S');\n\t\t\t\tobject[key] = this._decode();\n\t\t\t}\n\t\t\tthis._skip();\n\t\t}\n\t\treturn object;\n\t}\n\n\t_decodeCount() {\n\t\tconst count = this._decode();\n\t\tif (Number.isInteger(count) && count >= 0) {\n\t\t\treturn count;\n\t\t}\n\t\tthrow new Error('Invalid length/count');\n\t}\n\n\t_handleUnsupported(byteLength, handlingBehavior, isBinary) {\n\t\tif (typeof handlingBehavior === 'function') {\n\t\t\treturn this._read(handlingBehavior, byteLength);\n\t\t}\n\t\tswitch (handlingBehavior) {\n\t\t\tcase 'skip':\n\t\t\t\tthis._skip(byteLength);\n\t\t\t\treturn undefined;\n\t\t\tcase 'raw':\n\t\t\t\treturn isBinary ? this._readUint8Array(byteLength) : this._readString(byteLength);\n\t\t}\n\t\tthrow new Error('Unsuported type');\n\t}\n\n\t_readUint8Array(byteLength) {\n\t\treturn this._read(\n\t\t\t({ array }, offset) => new Uint8Array(array.buffer, offset, byteLength),\n\t\t\tbyteLength\n\t\t);\n\t}\n\n\t_readInt8Array(byteLength) {\n\t\treturn this._read(\n\t\t\t({ array }, offset) => new Int8Array(array.buffer, offset, byteLength),\n\t\t\tbyteLength\n\t\t);\n\t}\n\n\t_readString(byteLength) {\n\t\treturn this._read(\n\t\t\t({ array }, offset) =>\n\t\t\t\tthis._textDecoder.decode(new DataView(array.buffer, offset, byteLength)),\n\t\t\tbyteLength\n\t\t);\n\t}\n\n\t_skip(byteLength = 1) {\n\t\tthis._checkRange(byteLength);\n\t\tthis._offset += byteLength;\n\t}\n\n\t_readType(lookahead) {\n\t\tconst { array, view } = this._storage;\n\t\tlet type = 'N';\n\t\twhile (type === 'N' && this._offset < array.byteLength) {\n\t\t\ttype = String.fromCharCode(view.getInt8(this._offset++));\n\t\t}\n\t\tif (lookahead) {\n\t\t\tthis._offset--;\n\t\t}\n\t\treturn type;\n\t}\n\n\t_read(retriever, byteLength) {\n\t\tthis._checkRange(byteLength);\n\t\tconst value = retriever(this._storage, this._offset, byteLength);\n\t\tthis._offset += byteLength;\n\t\treturn value;\n\t}\n\n\t_checkRange(byteLength) {\n\t\tif (this._offset + byteLength > this._storage.array.byteLength) {\n\t\t\tthrow new Error('Unexpected EOF');\n\t\t}\n\t}\n}\n","import { UbjsonEncoder } from './ubjson-encoder';\nimport { UbjsonDecoder } from './ubjson-decoder';\nexport { UbjsonEncoder };\nexport { UbjsonDecoder };\n\nexport function encode(value, options) {\n\tconst encoder = new UbjsonEncoder(options);\n\treturn encoder.encode(value);\n}\n\nexport function decode(buffer, options) {\n\tconst decoder = new UbjsonDecoder(options);\n\treturn decoder.decode(buffer);\n}\n\nexport const Ubjson = { encode, decode };\n"],"names":["UbjsonEncoder","constructor","options","_options","_textEncoder","TextEncoder","require","encode","value","packers","this","_encode","size","reduce","acc","x","byteLength","array","Uint8Array","storage","view","DataView","buffer","offset","packer","storer","type","_getType","_packType","_encodeValue","char","bytes","charCodeAt","_pack","setInt8","_packTypedArray","setUint8","setInt16","setInt32","setFloat32","setFloat64","_encodeArray","_encodeObject","length","Number","isInteger","isNaN","Math","fround","Array","isArray","ArrayBuffer","isView","Error","optimizeArrays","name","concat","_packContainerMarkers","items","from","map","_packContainerItems","Object","entries","key","optimizeObjects","count","push","terminator","optimize","_obtainCommonType","item","_typeReducer","some","a","b","reduceTo","seq","min","indexOf","set","UbjsonDecoder","_textDecoder","TextDecoder","decode","_storage","_offset","_decode","_readType","_read","getInt8","getUint8","getInt16","getInt32","_handleUnsupported","int64Handling","getFloat32","getFloat64","_decodeCount","highPrecisionNumberHandling","String","fromCharCode","_readString","_decodeArray","_decodeObject","_decodeContainerMarkers","_skip","fill","useTypedArrays","_readInt8Array","_readUint8Array","Int16Array","Int32Array","Float32Array","Float64Array","i","object","handlingBehavior","isBinary","Int8Array","_checkRange","lookahead","retriever","Ubjson"],"mappings":"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"}